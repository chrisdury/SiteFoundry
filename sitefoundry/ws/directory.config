<directory>
	<rule>
		<id></id>
		<script language="cs" class="Script" method="Start" assemblies="">
			<![CDATA[
			//Example of creating groups which appear as folder in XStandard interface.
			using System;

			public class Script
			{
				public void Start()
				{
					XStandard.Directory.AddContainer("Staff", "a", "", "", "users");
					XStandard.Directory.AddContainer("Products", "b");
					XStandard.Directory.AddContainer("Special Characters & Symbols", "c", "", "directory-xhtml-entities.xml");
					XStandard.Directory.AddContainer("Placeholders", "d", "", "", "flag");
				}
			}
			]]>
		</script>
	</rule>
	<rule>
		<id>a</id>
		<script language="cs" class="Script" method="Start" assemblies="System.dll;System.Data.dll;">
			<![CDATA[
			//This is an example of how to fetch data from a database and format it into XHTML.

			using System;
			using System.Data;
			using System.Data.Odbc;

			public class Script
			{
				public void Start()
				{
					try
					{
						string connectionString = @"Driver={Microsoft Text Driver (*.txt; *.csv)};Dbq=" + XStandard.Directory.CurrentFolder + ";Extensions=csv";
						OdbcConnection connection = new OdbcConnection(connectionString);
						connection.Open();
	
						OdbcCommand command = new OdbcCommand("SELECT * FROM directory_example_staff.csv", connection);
						OdbcDataReader reader = command.ExecuteReader();
	
						while (reader.Read())
						{
							string name = reader["last_name"].ToString() + ", " + reader["first_name"].ToString();
							string xhtml = "<a href=\"staff.aspx?id=" + reader["staff_id"].ToString() + "\">" + name + "</a> <a href=\"mailto:" + reader["email"].ToString() + "\"><img src=\"http://xstandard.com/images/mail.gif\" width=\"16\" height=\"16\" alt=\"" + "Email: " + reader["first_name"].ToString() + " " + reader["last_name"].ToString() + "\" /></a>";
							string icon = "";
							if (reader["sex"].ToString() == "M")
							{
								icon = "user-male";
							}
							else if (reader["sex"].ToString() == "F")
							{
								icon = "user-female";
							}
							XStandard.Directory.AddObject(name, xhtml, icon);
						}
						reader.Close();
						command.Dispose();
						connection.Close();
					}
					catch (Exception e)
					{
						XStandard.Directory.AddObject("Error: " + e.Message, "<p>" + XStandard.Directory.XHTMLEscape(e.Message) + "</p>", "help");
					}
				}
			}
			]]>
		</script>
	</rule>
	<rule>
		<id>b</id>
		<script language="cs" class="Script" method="Start" assemblies="">
			<![CDATA[
			//This is an example of how to read XHTML from a file.
			using System;
			using System.IO;
	
			public class Script
			{
				public void Start()
				{
					XStandard.Directory.AddObject("Cordless Phone", XStandard.Directory.ReadFromFile(Path.Combine(XStandard.Directory.CurrentFolder, "directory-example-product-1.txt")));
					XStandard.Directory.AddObject("Hand Vacuum", XStandard.Directory.ReadFromFile(Path.Combine(XStandard.Directory.CurrentFolder, "directory-example-product-2.txt")));
					XStandard.Directory.AddObject("Toaster", XStandard.Directory.ReadFromFile(Path.Combine(XStandard.Directory.CurrentFolder, "directory-example-product-3.txt")));
					XStandard.Directory.AddObject("Indoor Grill", XStandard.Directory.ReadFromFile(Path.Combine(XStandard.Directory.CurrentFolder, "directory-example-product-4.txt")));
				}
			}
			]]>
		</script>
	</rule>
	<rule>
		<id>d</id>
		<script language="cs" class="Script" method="Start" assemblies="">
			<![CDATA[
			//This is an example of how create XHTML on the fly.
			using System;
		
			public class Script
			{
				public void Start()
				{
					XStandard.Directory.AddObject("Temperature", "<p>The current temperature in Vancouver is <temperature location=\"Vancouver, BC, Canada\" title=\"Placeholder for temperature.\"/>.</p>", "thermometer");
					XStandard.Directory.AddObject("Stock Price", "<p>The current stock price for IBM is <stock symbol=\"IBM\" exchange=\"NYSE\" title=\"Placeholder for stock price.\" />.</p>", "certificate");
				}
			}
			]]>
		</script>
	</rule>
</directory>